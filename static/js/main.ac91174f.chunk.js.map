{"version":3,"sources":["components/MenuComponent.js","components/DishdetailComponent.js","shared/dishes.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["RenderMenuItem","dish","onClick","Card","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","className","RenderComments","comments","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","RenderDish","CardBody","CardText","description","DishDetail","dishItem","commentItem","DISHES","category","label","price","rating","Main","state","selectedDish","dishId","this","setState","Navbar","dark","color","NavbarBrand","href","onDishSelect","filter","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac91174f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle } from 'reactstrap';\r\n\r\n    function RenderMenuItem({dish , onClick}){\r\n        return (\r\n            <Card onClick={()=>onClick(dish.id)}>\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle >{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.map(dish => {\r\n            return (\r\n                <div key={dish.id} className='col-12 col-md-5 m-1'>\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick}/>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu; ","import React from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle } from 'reactstrap';\r\n\r\n\r\n    function RenderComments({comments}) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: '2-digit'\r\n                        }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        const dish = props.dish\r\n        if (dish == null) {\r\n            return (<div></div>)\r\n        }\r\n        const dishItem = <RenderDish dish= {props.dish}/>\r\n        const commentItem = <RenderComments comments = {props.dish.comments}/>\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    {dishItem}\r\n                    {commentItem}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default DishDetail","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]                        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        }\r\n    ];","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { DISHES } from '../shared/dishes';\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        dishes: DISHES,\r\n        selectedDish: null\r\n    };\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark color=\"primary\">\r\n          <div className=\"container\">\r\n            <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n          </div>\r\n        </Navbar>\r\n        <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n        <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}